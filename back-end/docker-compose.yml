services:
  postgres:
    image: postgres:16
    container_name: kudos-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./back-end/src/main/resources/db/migration:/docker-entrypoint-initdb.d:ro

    networks:
      - kudos-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 3

  app:
    build: .
    container_name: kudos-back-end-app
    ports:
      - "${BACKEND_HTTP_PORT}:9080"
      - "${BACKEND_HTTPS_PORT}:9443"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - kudos-network
    environment:
      - DB_HOST=${POSTGRES_HOST}
      - DB_PORT=${POSTGRES_PORT}
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - BACKEND_HTTP_PORT=${BACKEND_HTTP_PORT}
      - BACKEND_HTTPS_PORT=${BACKEND_HTTPS_PORT}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION_HOURS=${JWT_EXPIRATION_HOURS}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}

volumes:
  postgres_data:

networks:
  kudos-network:
    driver: bridge
